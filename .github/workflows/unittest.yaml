name: unittest
on:
  push:
  workflow_dispatch:

jobs:
  bazel-with-remote-cache:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu21.04, ubuntu21.10]

    container:
      image: curoky/homebrew:ubunut20.10

    env:
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      PATH: /home/linuxbrew/.linuxbrew/bin:/usr/local/bin:/usr/bin:/bin

    steps:
      - uses: actions/checkout@v2

      - name: setup bazel
        run: |
          brew tap curoky/tap
          # git -C $(brew --prefix)/Homebrew/Library/Taps/curoky/homebrew-tap checkout dev
          brew install bazel@3 tbb python@3.9 gperf qt@5.13.2 libiberty
          sudo ln -s /home/linuxbrew/.linuxbrew/opt/python@3.9/bin/python3 /usr/bin/python

      - name: mount bazel cache
        uses: actions/cache@v2
        with:
          path: '~/.cache/bazel'
          key: bazel-cache-${{ github.sha	}}
          restore-keys: |
            bazel-cache-

      # - name: bazel clean
      #   if: ${{ github.event_name == 'schedule' }}
      #   run: rm -rf ~/.cache/bazel

      - name: bazel build
        run: bazel build //...

      - name: bazel test
        run: bazel test //...

      - uses: curoky/actions/tmate@master
        if: ${{ failure() }}

  # - uses: webfactory/ssh-agent@v0.5.4
  #   with:
  #     ssh-private-key: ${{ secrets.RULES_PKG_SSH_PRIVATE_KEY }}
  bazel-on-buildbuddy:
    runs-on: ubuntu-22.04
    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 3200:80
    steps:
      - uses: earthly/actions-setup@v1
      - uses: actions/checkout@v2

      - name: mount conan cache
        uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: conan-${{ runner.os }}-${{ hashFiles('conanfile.txt') }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          verbose: 2
          key: conan-ccache-${{ github.run_id }}-${{ github.sha }}
          restore-keys: |
            conan-ccache-

      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install tools
        run: brew install llvm gperf go-task/tap/go-task cmake ninja thrift

      - uses: actions/checkout@v3

      - name: Install conan
        run: brew install conan

      - name: install conan package
        run: task conan

      - name: setup buildbuddy
        run: |
          echo 'build --bes_results_url=https://app.buildbuddy.io/invocation/' >> .bazelrc
          echo 'build --bes_backend=grpcs://remote.buildbuddy.io' >> .bazelrc
          echo 'build --remote_cache=grpcs://remote.buildbuddy.io' >> .bazelrc
          echo 'build --remote_timeout=3600' >> .bazelrc
          echo 'build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API }}' >> .bazelrc

      - name: bazel build
        run: bazel build --remote_download_minimal --jvmopt="-Xmx:8G" --jvmopt="-Xms:512m" //lang/cpp/... || echo error

      - name: bazel test
        run: bazel test //lang/cpp/... || echo ignore error

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30

  cmake-vcpkg:
    runs-on: ubuntu-20.04

    container:
      image: curoky/compile:ubuntu21.10

      - name: mount vcpkg cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/vcpkg
          key: vcpkg-${{ github.run_id }}-${{ github.sha }}
          restore-keys: |
            vcpkg-

      - name: cleanup cache
        if: ${{ github.event_name == 'schedule' }}
        run: rm -rf ~/.cache/vcpkg/*

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          verbose: 2
          key: vcpkg-ccache-${{ github.run_id }}-${{ github.sha }}
          restore-keys: |
            vcpkg-ccache-

      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install tools
        run: brew install go-task/tap/go-task cmake ninja thrift

      - name: install vcpkg package
        run: task vcpkg

      - name: Build
        run: task cmake -- vcpkg

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30

  cmake-conan:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: mount conan cache
        uses: actions/cache@v2
        with:
          path: ~/.conan/data
          key: conan-${{ runner.os }}-${{ hashFiles('conanfile.txt') }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          verbose: 2
          key: conan-ccache-${{ github.run_id }}-${{ github.sha }}
          restore-keys: |
            conan-ccache-

      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install tools
        run: brew install go-task/tap/go-task cmake ninja thrift

      - name: Install conan
        run: brew install conan

      - name: install conan package
        run: task conan

      - name: Build
        run: task cmake -- conan

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30

  cmake-cpm:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: build
        run: task cmake
